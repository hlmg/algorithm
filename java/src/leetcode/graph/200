class Solution {
    int[] dy = {0, 0, -1, 1};
    int[] dx = {-1, 1, 0, 0};

    public int numIslands(char[][] grid) {
        int answer = 0;
        for (int i = 0; i < grid.length; i++) {
            for (int j = 0; j < grid[i].length; j++) {
                if (grid[i][j] == '1') {
                    dfs(i, j, grid);
                    answer++;
                }
            }
        }
        return answer;
    }

    private void dfs(int y, int x, char[][] grid) {
        grid[y][x] = '0';
        for (int i = 0; i < 4; i++) {
            int ny = y + dy[i];
            int nx = x + dx[i];
            if (ny < 0 || nx < 0 || ny >= grid.length || nx >= grid[0].length) {
                continue;
            }
            if (grid[ny][nx] == '0') {
                continue;
            }
            dfs(ny, nx, grid);
        }
    }
}
